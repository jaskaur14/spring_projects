package com.codingdojo.dojos.bookClub.controllers;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import com.codingdojo.dojos.bookClub.models.LoginUser;
import com.codingdojo.dojos.bookClub.models.User;
import com.codingdojo.dojos.bookClub.services.UserService;

import jakarta.servlet.http.HttpSession;
import jakarta.validation.Valid;

@Controller
public class AuthController {

	@Autowired
	private UserService uService;
	@Autowired
	private BookService books;
	
	@GetMapping("/")
	public String index(Model model) {
		model.addAttribute("newUser", new User());
		model.addAttribute("loginUser", new LoginUser());
//	public String register(@ModelAttribute("newUser") User user) {
		return "logreg.jsp";
	}
	@PostMapping("/registration")
	public String process(@Valid @ModelAttribute("newUser") User user, BindingResult result, Object LoginUser, Model model, HttpSession session) {
		
		Boolean isValid= uService.isValid(result, user, session);
		
		
		if(result.hasErrors() || isValid != true) {

			model.addAttribute("loginUser", new LoginUser());
			return "logreg.jsp";
		} else {
			uService.create(user);
			session.setAttribute("loggedIn", user.getId());
			return "redirect:/books";
		}
	}
	
//	@GetMapping("/login")
//	public String login(@ModelAttribute("loginUser") LoginUser user) {
//		return "logreg.jsp";
//	}
//	
	@PostMapping("/login")
	public String process(@Valid @ModelAttribute("loginUser") LoginUser user, BindingResult result, Object e, Model model, HttpSession session) {
		
		Boolean isValid = uService.attemptLogin(result, user, session);
		
		if(result.hasErrors() || isValid != true) {
			System.out.println(isValid);
			
			model.addAttribute("newUser", new User());
			return "logreg.jsp";
		} 
		return "redirect:/books";
	}
	
	@GetMapping("/books")
	public String success(HttpSession session, Model model, RedirectAttributes flashAttributes) {
		
		if( session.getAttribute("loggedIn") == null) {
			flashAttributes.addFlashAttribute("loginError", "You must be logged in");
			return "redirect:/";
		}
		
		User loggedIn = uService.find((Long)session.getAttribute("loggedIn"));

		model.addAttribute("allBooks", books.all());
		model.addAttribute("loggedInUser", loggedIn);
		return "dashboard.jsp";
	}
	
	@GetMapping("/logout")
	public String logout(HttpSession session) {
		session.invalidate();
		return "redirect:/";
	}
}
